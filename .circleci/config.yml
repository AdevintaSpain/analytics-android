version: 2
jobs:
  build:
    working_directory: ~/analytics-android
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
      CIRCLE_JDK_VERSION: oraclejdk8
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "analytics/build.gradle" }}-{{ checksum  "analytics-samples/analytics-sample/build.gradle" }}
      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true
      - run:
          name: Copy E2E Test Credentials
          command: |
            if [ "${RUN_E2E_TESTS}" == "true" ]; then
              echo "WEBHOOK_AUTH_USERNAME=${WEBHOOK_AUTH_USERNAME}" >> "analytics-samples/analytics-sample/e2e_test.properties"
            fi
      - run:
          name: Build
          command: ./gradlew test
      - run:
          name: Run E2E Test
          command: |
            if [ "${RUN_E2E_TESTS}" == "true" ]; then
              echo "${FIREBASE_TOKEN}" >> "secret.json"
              ./tools/google-cloud-sdk/bin/gcloud config set project analytics-android-e2e-test
              ./tools/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file secret.json
              ./gradlew firebaseTestLabExecuteDebugInstrumentation
            fi
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "analytics/build.gradle" }}-{{ checksum  "analytics-samples/analytics-sample/build.gradle" }}
      - run:
          name: Upload code coverage reports
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              .buildscript/deploy_snapshot.sh
            else
              echo "==> ignoring non-master branch"
            fi
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
  scheduled_e2e_test:
    triggers:
      - schedule:
          cron: "20 * * * *"
          filters:
            branches:
              only:
                - master
                - scheduled_e2e_testing
    jobs:
      - build
